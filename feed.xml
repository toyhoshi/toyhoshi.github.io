<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>toyhoshi.github.io</title>
    <link href="https://toyhoshi.github.io/feed.xml" rel="self" />
    <link href="https://toyhoshi.github.io" />
    <updated>1970-01-01T01:00:00+01:00</updated>
    <author>
        <name>Mr Toyhoshi</name>
    </author>
    <id>https://toyhoshi.github.io</id>

    <entry>
        <title>ECS vs. Fargate: What&#x27;s the difference?</title>
        <author>
            <name>Mr Toyhoshi</name>
        </author>
        <link href="https://toyhoshi.github.io/ecs-vs-fargate-whats-the-difference.html"/>
        <id>https://toyhoshi.github.io/ecs-vs-fargate-whats-the-difference.html</id>
            <category term="Fargate"/>
            <category term="ECS"/>

        <updated>2020-08-12T11:31:37+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://toyhoshi.github.io/media/posts/4/rekognition.jpg" alt="" />
                    When discussing options to run Docker on AWS, I’m often asked about the differences between ECS and EKS or Kubernets. However, lately,&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://toyhoshi.github.io/media/posts/4/rekognition.jpg" alt="" />
                <div class="row">
<div class="col-sm-8 offset-sm-2">
<div class="meta-information"><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">When discussing options to run Docker on AWS, I’m often asked about the differences between ECS and </span><a href="https://cloudonaut.io/eks-vs-ecs-orchestrating-containers-on-aws/" style="font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">EKS</a><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);"> or </span><a href="https://cloudonaut.io/ecs-vs-kubernetes/" style="font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">Kubernets</a><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">. However, lately, a new question arises: What’s the difference between ECS and </span><a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS_Fargate.html" target="_blank" rel="noopener" style="font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">AWS Fargate</a><span style="color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);">? In this blog post, you get the answer. You also learn about the advantages and disadvantages of both options.</span></div>
</div>
</div>
<div class="row content">
<div class="col-12 col-sm-8">
<p>To understand the difference, let’s divide the ECS service into two responsibilities:</p>
<ol>
<li>Managing the lifecycle and placement of tasks</li>
<li>Running containers</li>
</ol>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Why use infrastructure as code?</title>
        <author>
            <name>Mr Toyhoshi</name>
        </author>
        <link href="https://toyhoshi.github.io/why-use-infrastructure-as-code.html"/>
        <id>https://toyhoshi.github.io/why-use-infrastructure-as-code.html</id>
            <category term="IaC"/>

        <updated>2020-08-12T11:31:37+02:00</updated>
            <summary>
                <![CDATA[
                    Infrastructure as code is the process of provisioning and managing your cloud resources by writing a template file that is&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Infrastructure as code is the process of provisioning and managing your cloud resources by writing a template file that is both human readable, and machine consumable. For AWS cloud development the built-in choice for infrastructure as code is <a href="https://aws.amazon.com/cloudformation/" target="_blank" class="highlight" rel="noopener">AWS CloudFormation</a>.</p>
<p>Using AWS CloudFormation you can write a description of the resources that you want to create on your AWS account, and then ask AWS CloudFormation to make this description into reality. For example the following YAML template snippet describes an AWS ECS service resource to create:</p>
<pre><code class="language-yaml hljs"><span class="hljs-attr">Service:</span>
<span class="hljs-attr">  Type:</span> <span class="hljs-string">'AWS::ECS::Service'</span>
<span class="hljs-attr">  DependsOn:</span> <span class="hljs-string">'ServiceDiscoveryService'</span>
<span class="hljs-attr">  Properties:</span>
<span class="hljs-attr">    ServiceName:</span> <span class="hljs-string">'app'</span>
<span class="hljs-attr">    Cluster:</span> <span class="hljs-string">'production'</span>
<span class="hljs-attr">    DeploymentConfiguration:</span>
<span class="hljs-attr">      MaximumPercent:</span> <span class="hljs-number">200</span>
<span class="hljs-attr">      MinimumHealthyPercent:</span> <span class="hljs-number">75</span>
<span class="hljs-attr">    DesiredCount:</span> <span class="hljs-number">5</span>
<span class="hljs-attr">    TaskDefinition:</span> !Ref <span class="hljs-string">'TaskDefinition'</span>
<span class="hljs-attr">    ServiceRegistries:</span>
<span class="hljs-attr">      - RegistryArn:</span> !GetAtt ServiceDiscoveryService.Arn
<span class="hljs-attr">        ContainerPort:</span> <span class="hljs-number">3000</span>
<span class="hljs-attr">        ContainerName:</span> <span class="hljs-string">'myapp'</span>
</code></pre>
<p>AWS CloudFormation takes this template and then assumes the responsibility of creating, updating, and deleting resources on your AWS account according to what is described in the template. If you add a new resource to the file CloudFormation will create that resource on your account. If you update a resource CloudFormation will either update or replace any existing matching resources. And if you remove a resource from the template it will be cleaned up and removed from your AWS account.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Cloud, where are you ?</title>
        <author>
            <name>Mr Toyhoshi</name>
        </author>
        <link href="https://toyhoshi.github.io/cloud-where-are-you.html"/>
        <id>https://toyhoshi.github.io/cloud-where-are-you.html</id>
            <category term="cloud"/>

        <updated>2020-08-12T11:31:37+02:00</updated>
            <summary>
                <![CDATA[
                     What is the purpose of the blog? Why it was created? The post is about answers that change over&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p class="align-center"><img loading="lazy" src="https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRXLrst9S_iKjPIQnxMxVQONXNfW7ja8xGm6g&amp;usqp=CAU" data-is-external-image="true"  alt="Let The Adventure Begin Coffee Mug - New Journey Gift ..."></p>
<p>What is the purpose of the blog? Why it was created? The post is about answers that change over time. </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>What is a Terraform and Infrastructure as Code?</title>
        <author>
            <name>Mr Toyhoshi</name>
        </author>
        <link href="https://toyhoshi.github.io/what-is-a-terraform-and-infrastructure-as-code.html"/>
        <id>https://toyhoshi.github.io/what-is-a-terraform-and-infrastructure-as-code.html</id>

        <updated>2020-08-12T11:31:37+02:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://toyhoshi.github.io/media/posts/3/linux-wallpaper.png" alt="" />
                    Terraform is an open source tool built by Hashicorp to automate the provisioning of infrastructure resources. It is used to&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://toyhoshi.github.io/media/posts/3/linux-wallpaper.png" alt="" />
                <p>Terraform is an open source tool built by Hashicorp to automate the provisioning of infrastructure resources. It is used to build, manage, update and delete infrastructure resources like virtual machines, containers, networking and others using infrastructure as a coding philosophy. Terraform is a vendor agnostic tool and can manage infrastructure for multiple resource providers (for example AWS, Google Cloud, Azure, Aviatrix, Heroku, Oracle, etc.).</p>
<p>In simple terms, if you want to provision a Virtual Private Cloud or an EC2 instance in AWS, you can write a terraform configuration to automate this process rather than doing it manually from AWS console.</p>
            ]]>
        </content>
    </entry>
</feed>
